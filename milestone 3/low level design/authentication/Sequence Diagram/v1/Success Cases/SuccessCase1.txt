sequenceDiagram
    activate User
    User->>+Console: User wants to log in
    Console->>+Security Manager: var secManager = new SecurityManager();
    Security Manager->>Security Manager: SecurityManager();
    Security Manager-->>-Console: return SecurityManager instance
    Console->>+Security Manager: secManager.isActive(): int
    Security Manager->>+Authentication Service: var authNService = new AuthenticationService();
    participant SqlDAO
    Authentication Service->>+User Account: var authNUser = new UserAccount();
    User Account->>User Account: UserAccount();
    User Account-->>-Authentication Service: return Users instance
    Authentication Service->>Authentication Service: AuthenticationService(authNUser)    
    Authentication Service-->>-Security Manager: return AuthenticationService instance
    Security Manager->>Security Manager: return(authNService.getUsername() == null? return 0: return 1)
    Security Manager-->>-Console: return 0
    Console->>Console: if (1) Console.WriteLine("User is already logged in.") else Console.WriteLine("Enter username:")
    Console-->>-User: Console.WriteLine("Enter username:");
    User->>+Console: User enters username
    Console->>Console: string userName = Console.ReadLine();
    Console-->>-User: Console.WriteLine("Enter password");
    User->>+Console: User enters password
    Console->>Console: string password = Console.ReadLine();
    Console->>+Security Manager: secManager.authenticate(string userName, string password): int
    Security Manager->>+Authentication Service: authNService.getSalt(string userName): string
    Authentication Service->>+SqlDAO: var sqlDAO = new SqlDAO(string connectionString);
    SqlDAO->>SqlDAO: SqlDao(string connectionString)
    SqlDAO-->>-Authentication Service: return SqlDAO instance
    Authentication Service->>+SqlDAO: authNUser = sqlDAO.getUser(string userName)
    SqlDAO->>+Utification DS: 
    Utification DS->>Utification DS: Select * from User where Username == userName 
    Utification DS-->>-SqlDAO: return row
    SqlDAO->>+User Account: var tempUser = new UserAccount(string[] row);
    User Account->>User Account: UserAccount(string[] row);
    User Account-->>-SqlDAO: return UserAccount instance
    SqlDAO-->>-Authentication Service: return UserAccount instance
    Authentication Service-->>-Security Manager: return salt string
    Security Manager->>Security Manager: string digest = makeDigest(string password, string salt);
    Security Manager->>+Authentication Service: authNService.validUser(string userName, string digest): int
    Authentication Service->>Authentication Service: if(authNUser.getUsername()==userName && authNUser.getDigest()==digest) return 1 else return 0
    Authentication Service-->>-Security Manager: return 1
    Security Manager-->>-Console: return 1
    Console-->>-User: Console.WriteLine("Welcome Authenticated User");
    deactivate User