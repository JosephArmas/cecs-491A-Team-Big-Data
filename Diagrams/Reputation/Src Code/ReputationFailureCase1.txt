title As a user, I want to view other users' reputation but I am unable to

actor Authenticated User
note over Authenticated User: Must be in Reputation View
participant ReputationView
participant Console
participant ReputationController
participant ReputationManager
participant ReputationService
participant Logging
participant ReputationDataAccess
participant LoggingDataAccess
participant SQLServer
activate Authenticated User

Authenticated User ->> ReputationView: User enters Reputation view specifically\nto see other users reputation
activate ReputationView

ReputationView ->> Console: axios.get(reputationServer).then(response=>{}): JSON Object
activate Console

Console ->> ReputationController: [Route("reputation")]\n[HttpGet]\nGetRatingsList(): Task Object
activate ReputationController

ReputationController ->> ReputationManager: GetUsersRatingsList(): Response Object
activate ReputationManager

ReputationManager ->> ReputationService: GetOrganizedUserRatings(): Response Object
activate ReputationService

ReputationService ->> ReputationDataAccess: await SelectUserRatings(): Task Object
activate ReputationDataAccess

ReputationDataAccess ->> SQLServer: ExecuteReader(): SqlDataReader Object
activate SQLServer

SQLServer ->> SQLServer: SELECT rating\nFROM dbo.UserProfile
activate SQLServer

SQLServer -->> SQLServer: does not return all rows from dbo.UserProfile\nthat meet the condition
deactivate SQLServer

SQLServer -->> ReputationDataAccess: return SqlDataReader
deactivate SQLServer

ReputationDataAccess -->> ReputationService: return Task Object (isSuccessful = false)
deactivate ReputationDataAccess

ReputationService ->> Logging: Log(Log Object): Response Object
activate Logging

Logging ->>LoggingDataAccess: await Execute(String insertSql).ConfigureAwait(false): Task Object
activate LoggingDataAccess

LoggingDataAccess ->> SQLServer: ExecuteNonQuery(): Int32
activate SQLServer

SQLServer ->> SQLServer: INSERT INTO dbo.Logs(CorrelationID, LogLevel, UserHash, [Event], Category, [Message])\nVALUES (1, 'Error', 'log._userHash', 'Reputationservice.GetUsersRatings()', 'app.Reputation', 'Retrieving User Ratings Failed');
activate SQLServer

SQLServer -->> SQLServer: return "You have made changes to the database. Rows affected: 1"
deactivate SQLServer

SQLServer -->> LoggingDataAccess: return 1
deactivate SQLServer

LoggingDataAccess -->> Logging: return Task Object
deactivate LoggingDataAccess

Logging -->> ReputationService: return Response Object
deactivate Logging

ReputationService -->> ReputationManager: return Response Object (Response.isSuccessful = false)
deactivate ReputationService

ReputationManager -->> ReputationController:return Response Object (Response.isSuccessful = false)
deactivate ReputationManager

ReputationController -->> Console: return Task Object (isSuccessful = false)
deactivate ReputationController

Console -->> ReputationView: return JSON Object
deactivate Console

ReputationView -->> Authenticated User: Displays Error "Reputation is Unavailable Right Now.\nPlease Try Again" back to User
deactivate ReputationView

deactivate Authenticated User