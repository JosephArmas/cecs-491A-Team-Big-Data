title Iâ€™m a regular user, I want to become a Service provider but response took longer than 5 seconds

actor User
participant ServiceCreationView
participant ServiceProviderController
participant ServiceProviderManager
participant ServProvService
participant SqlDAO
participant DBInserter
participant datastore

box over User:Precondition\nUser is in an authenticated session.\nUser is in Service creation view


User->ServiceCreationView: User enters their information
activate ServiceCreationView
ServiceCreationView->ServiceCreationView:let CompanyName = GetElementbyID(name)\nif(CompanyName.length()>30 || Companyame.length()<4)\n{return error}\nif(CompanyName.includes(listofunacceptable))\n{return error}
ServiceCreationView->ServiceCreationView:let CompanyDesc = GetElementbyID(description)\nif(CompanyDesc.length()>1000 || CompanyDesc.split(' ').length > 150)\n{return error}
ServiceCreationView->ServiceCreationView:let CompanyPhone = GetElementbyID(phone)\nif(CompanyPhone.length()>10)\n{return error}\nif(CompanyPhone.substring(0,3).includes(listofbadarea))\n{return error}
ServiceCreationView->ServiceProviderController:axios.set(company:json):http response
activate ServiceProviderController
ServiceProviderController->ServiceProviderController:JWTverification():bool
ServiceProviderController->ServiceProviderManager:var ServManager = new ServiceProviderManager()
activate ServiceProviderManager
ServiceProviderManager->ServiceProviderManager:Constructor()
ServiceProviderController<-ServiceProviderManager:return ServiceProviderManager object
deactivate ServiceProviderManager
ServiceProviderController->ServiceProviderManager:CreateService(Server:Serv):response
activate ServiceProviderManager
ServiceProviderManager->ServiceProviderManager:Check Security
ServiceProviderManager->ServiceProviderManager:validate company name,\ndescription,\nand phone number
ServiceProviderManager->ServiceProviderManager:if(Server.CompanyName.length >30 || Server.Company.length<4)\n{response.isSuccessful = false; response.errorMessage = 'title length'}\nif(Server.CompanyName.Contains(listofunacceptable))\n{response.isSuccessful = false; response.errorMessage = 'title char'}
ServiceProviderManager->ServiceProviderManager:if(Server.CompanyDesc.length>1000 || Server.CompanyDesc.split(' ').length > 150)\n{response.isSuccessful = false; response.errorMessage = 'desc length'}\nif(Server.CompanyTitle.Contains(listofunacceptable))\n{response.isSuccessful = false; response.errorMessage = 'desc char'}\n
ServiceProviderManager->ServiceProviderManager:if(Server.CompanyPhone.length > 10)\n{response.isSuccessful = false; response.errorMessage = 'phone length'}\nif(Server.CompanyPhone.contains(listofunacceptable))\n{response.isSuccessful = false; response.errorMessage = 'phone area'}
ServiceProviderManager->ServProvService:var ServService = new ServProvService()
activate ServProvService
ServProvService->ServProvService:Constructor()
ServiceProviderManager<-ServProvService:return ServProvService object
deactivate ServProvService
ServiceProviderManager->ServProvService:ServService.CreateServiceProv(Servinfo:Serv):response
activate ServProvService
ServProvService->SqlDAO:var dao = new SqlDAO
activate SqlDAO
SqlDAO->SqlDAO:Constructor()
ServProvService<-SqlDAO:return SqlDAO object
deactivate SqlDAO
ServProvService->SqlDAO:dao.ProviderInsert():response
activate SqlDAO
SqlDAO->DBInserter:new DBInserter():DBInserter object
activate DBInserter
DBInserter-->SqlDAO:return DBInserter
deactivate DBInserter
SqlDAO->datastore:Call stored procedure
activate datastore
datastore->datastore:SELECT COUNT (*) From dbo.'ServProvServices'\nWhere Active = 0
datastore-->SqlDAO:return count
deactivate datastore
SqlDAO->SqlDAO:if(count = 10000){return}
SqlDAO->datastore:Call stored procedure
activate datastore
datastore->datastore:INSERT INTO dbo.'ServProvServices'
datastore-->SqlDAO:return 1
deactivate datastore
SqlDAO-->ServProvService:return response
deactivate SqlDAO
ServProvService->ServProvService:validate for errors
ServProvService-->ServiceProviderManager:return response
deactivate ServProvService
ServiceProviderManager-->ServiceProviderController:return response
deactivate ServiceProviderManager
ServiceProviderController-->ServiceCreationView:return https response
deactivate ServiceProviderController
ServiceCreationView->ServiceCreationView:5 second counter to see if the \nprocess takes longer than 5 seconds
ServiceCreationView-->User:return "registering service is taking longer than expected. please try again"
